import React, { useState, useEffect } from 'react'
import type { NextPage } from 'next'
import Head from 'next/head'
import Sidebar from '../components/sidebar'
import styles from '../styles/Home.module.css'
import { Button, Grid, Typography, Stack, Card, LinearProgress, CardContent, CardActions, Box, CircularProgress, Backdrop } from '@mui/material';
import TableDisplay from '../components/table';
import CssBaseline from '@mui/material/CssBaseline';

const Home: NextPage = () => {

  // set-up table data in state
  const [unpaidData, setUnpaidData] = useState([]);
  const [paidData, setPaidData] = useState([]);
  // const [unusualData, setUnusualData] = useState([]);

  //setLoading for tables test - javan
  const [isLoading, setIsLoading] = useState(false);

  const [refreshData, setRefreshData] = useState(true);

  // useEffect to pull in data and update state

  useEffect(() => {
    console.log("in useEffect in for unpaidTable api, the refresh data is: ", refreshData);
    fetch('/api/unpaidTable')
      .then(res => res.json())
      .then(data => {
        setUnpaidData(data)
      })
      .catch((err) => console.log(err));
  }, [refreshData]);

  useEffect(() => {
    fetch('/api/paidTable')
      .then(res => res.json())
      .then(data => {
        setPaidData(data)
      })
      .catch((err) => console.log(err));
  }, [refreshData]);

  // useEffect(() => {
  //   fetch('/api/unusualTable')
  //     .then(res => res.json())
  //     .then(data => {
  //       setUnusualData(data)
  //     })
  // },[]);

  const bull = (
    <Box
      component="span"
      sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}
    >
      â€¢
    </Box>
  );

  const card = (
    <React.Fragment>
      <CardContent>
        <Typography sx={{ fontSize: 14 }} color="text.secondary" gutterBottom>
          Word of the Day
        </Typography>
        <Typography variant="h5" component="div">
          be{bull}nev{bull}o{bull}lent
        </Typography>
        <Typography sx={{ mb: 1.5 }} color="text.secondary">
          adjective
        </Typography>
        <Typography variant="body2">
          well meaning and kindly.
          <br />
          {'"a benevolent smile"'}
        </Typography>
      </CardContent>
      <CardActions>
        <Button size="small">Learn More</Button>
      </CardActions>
    </React.Fragment>
  );

  return (
    <div className={styles.container}>
      <CssBaseline />
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Sidebar refreshData={refreshData} setRefreshData={setRefreshData} setIsLoading={setIsLoading} />
      {/* <TableDisplay /> */}
      <main>
        <Grid container rowSpacing={4.5} columnSpacing={2.75}>
          {/* row 1 */}
          <Grid item xs={12} sx={{ mb: -1 }}>
            <Typography variant="h5">Unpaid Orders</Typography>
          </Grid>
          <Grid item xs={12} sx={{ mb: 1 }}>
            <TableDisplay data={unpaidData} tableType="unpaid" />
          </Grid>
          <Grid item md={8} sx={{ display: { sm: 'none', md: 'block', lg: 'none' } }} />
          {/* row 2 */}
          <Grid item xs={12} md={7} lg={8}>
            <Grid container alignItems="center" justifyContent="space-between">
              <Grid item>
                <Typography variant="h5">Paid Orders</Typography>
              </Grid>
              <Grid item>
                <Stack direction="row" alignItems="center" spacing={0}>
                  <Button
                    size="small"
                    color={'secondary'}
                    variant={'outlined'}
                  >
                    Month
                  </Button>
                  <Button
                    size="small"
                    color={'primary'}
                    variant={'outlined'}
                  >
                    Week
                  </Button>
                </Stack>
              </Grid>
              <Grid item xs={12} sx={{ mb: 1 }}>
                <TableDisplay data={paidData} tableType="paid" />
              </Grid>
            </Grid>
          </Grid>
          {/* row 3 */}
          <Grid item xs={12} md={7} lg={8}>

            <Grid item xs={12} sx={{ mb: -1 }}>
              <Typography variant="h5">Unusual Activity</Typography>
            </Grid>
            <Grid item xs={12} sx={{ mb: 1 }}>
              <TableDisplay data={[[5, 'product5', 5, 23, 'UNPAID'], [6, 'product6', 6, 67, 'UNPAID']]} tableType="unusual" />
            </Grid>
            <Grid item md={8} sx={{ display: { sm: 'none', md: 'block', lg: 'none' } }} />
          </Grid>
        </Grid>
      </main>
      {/* chart */}
      <div>
        <Grid container rowSpacing={4.5} columnSpacing={2.75}>
          <Grid item xs={12} sx={{ mb: 1 }}>
            <Typography variant="h5">Bar Graph</Typography>
          </Grid>
          <Box sx={{ minWidth: 275, m: 2 }}>
            <Card variant="outlined">{card}</Card>
          </Box>
        </Grid>
      </div>
      <Backdrop
        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}
        open={isLoading}
      >
        Starting Up Docker &nbsp;
        <CircularProgress color="inherit" />
      </Backdrop>
    </div>
  )
}

export default Home
